#!/usr/bin/env ruby

require 'rbconfig'

class String
  def red; "\e[31m#{self}\e[0m" end
  def magenta; "\e[35m#{self}\e[0m" end
  def bold; "\e[1m#{self}\e[22m" end
end

def append(path, text)
  File.open(File.expand_path path, 'a') { |f| f.write(text) }
end

def append_line(path, text)
  append(path, text + "\n")
end

def backup(path)
  path = File.expand_path path
  run "mv '#{path}' '#{path}.backup.#{Time.now.getutc.to_i}'" if exists path
end

def contains_line(path, regexp)
  File.foreach(File.expand_path path).grep(regexp).any?
end

def dir_exists(path)
  path = File.expand_path path
  Dir.exist?(path) || File.symlink?(path)
end

def exists(path)
  path = File.expand_path path
  Dir.exist?(path) || File.exist?(path) || File.symlink?(path)
end

def file_exists(path)
  path = File.expand_path path
  File.exist?(path) || File.symlink?(path)
end

def install(file_name)
  symlink (path_home file_name), (path_repo file_name)
end

def mac
  RbConfig::CONFIG['host_os'].downcase.include?('darwin')
end

def path_home(path)
  File.expand_path File.join(Dir.home, path)
end

def path_repo(path)
  File.expand_path File.join(File.dirname(__FILE__), path)
end

def run(cmd)
  puts cmd.magenta.bold
  result = system cmd
  puts 'failed'.red.bold unless result
  result
end

def symlink(from_path, to_path)
  from_path = File.expand_path from_path
  to_path = File.expand_path to_path
  return if File.symlink?(from_path) && File.readlink(from_path) == to_path
  backup from_path
  run "rm -rf '#{from_path}'" if exists from_path
  run "ln -s '#{to_path}' '#{from_path}'"
end

# Authenticate
run 'sudo -v'

# Update
run "git -C '#{path_repo '.'}' pull origin master"

# Files
install '.ackrc'
install '.aliases'
install '.curlrc'
install '.editorconfig'
install '.exports'
install '.functions'
install '.gbdinit'
install '.gitconfig'
install '.gitignore'
install '.hushlogin'
install '.inputrc'
install '.zshrc'

# Keys
unless file_exists('~/.ssh/id_rsa') && file_exists('~/.ssh/id_rsa.pub')
  backup '~/.ssh/id_rsa' if file_exists '~/.ssh/id_rsa'
  backup '~/.ssh/id_rsa.pub' if file_exists '~/.ssh/id_rsa.pub'
  run 'ssh-keygen -t rsa -N ""'
end

# Vim
run 'sh -c "curl -fsLS https://bit.ly/janus-bootstrap | bash"' unless dir_exists '~/.vim'

# Zsh
run 'sh -c "curl -fsLS https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh"' unless dir_exists '~/.oh-my-zsh'

if mac
  # Configuration
  run "#{path_repo '.'}/.macos" if mac

  # Xcode
  unless run 'xcode-select -p'
    run 'xcode-select --install'
    sleep 10 until run 'xcode-select -p'
  end
  run 'sudo xcodebuild -license accept'

  # Homebrew
  install '.Brewfile'
  run 'sh -c "curl -fsLS https://raw.githubusercontent.com/Homebrew/install/master/install | ruby"' unless file_exists '/usr/local/bin/brew'
  run 'brew bundle --global'
  run 'brew cleanup'
  run 'chsh -s /usr/local/bin/zsh' unless ENV['SHELL'] == '/usr/local/bin/zsh'
  append_line '/etc/paths', '/usr/local/sbin' unless contains_line '/etc/paths', /\/usr\/local\/sbin/
  append_line '/etc/shells' '/usr/local/bin/bash' unless contains_line '/etc/shells', /\/usr\/local\/bin\/bash/
  append_line '/etc/shells' '/usr/local/bin/zsh' unless contains_line '/etc/shells', /\/usr\/local\/bin\/zsh/
  run 'open /Applications/Docker.app'
  run 'open /Applications/Dropbox.app'
end